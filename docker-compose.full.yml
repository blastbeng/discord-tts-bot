---
version: "3.3"
services:
  discord-tts-bot-redis:
    image: redis
    container_name: discord-tts-bot-redis
    ports:
      - "63799:6379"
    restart: always
    volumes:
      - redisdata:/data
  discord-tts-bot-api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    container_name: discord-tts-bot-api
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    image: "blastbeng/discord-tts-bot-api:1.0.0"
    restart: always
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "./audios:/app/audios"
      - "./backups:/app/backups"
      - "./config:/app/config-external"
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "/tmp/discord-tts-bot-discord:/tmp/discord-tts-bot-discord"
      - "/dev/dri/card0:/dev/dri/card0"
      - "/dev/dri/renderD128:/dev/dri/renderD128"
    entrypoint: ./entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5080/utils/healthcheck"]
      interval: 15s
      timeout: 5s
      retries: 12
    network_mode: host
  discord-tts-bot-client:
    build:
      context: ./client
      dockerfile: Dockerfile.client
    container_name: discord-tts-bot-client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    depends_on:
      discord-tts-bot-api:
        condition: service_healthy
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "/tmp/discord-tts-bot-discord:/tmp/discord-tts-bot-discord"
    image: "blastbeng/discord-tts-bot-client:1.0.0"
    restart: always
  discord-tts-bot-webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile.webapp
    container_name: discord-tts-bot-webapp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    ports:
      - "5084:5084"
    depends_on:
      discord-tts-bot-api:
        condition: service_healthy
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
    image: "blastbeng/discord-tts-bot-webapp:1.0.0"
    restart: always
  discord-tts-bot-whatsapp:
    build:
      context: ./whatsapp
      dockerfile: Dockerfile
    container_name: discord-tts-bot-whatsapp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    ports:
      - "8967:8967"
    volumes:
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "./config/config.json:/usr/src/app/config.json"
      - "./config/wacache:/usr/src/app/config/wacache"
    image: "blastbeng/discord-tts-bot-whatsapp:1.0.0"
    restart: always
    depends_on:
      discord-tts-bot-api:
        condition: service_healthy
  mongodb:
    image: nertworkweb/mongodb-no-avx
    container_name: discord-tts-bot-mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    networks:
      - mongodb_net
    entrypoint: "/usr/local/bin/mongod --bind_ip_all"
  mongoclient:
    image: mongoclient/mongoclient:latest
    container_name: discord-tts-bot-mongoclient
    hostname: mongoclient
    depends_on:
      - mongodb
    networks:
      - mongodb_net
    ports:
      - 3300:3000
  libretranslate:
    container_name: libretranslate
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - LT_PORT=5000
      - LT_HOST=0.0.0.00
      - LT_FRONTEND_LANGUAGE_SOURCE=en
      - LT_FRONTEND_LANGUAGE_TARGET=it
      - LT_FRONTEND_TIMEOUT=900
      - LT_UPDATE_MODELS=True
    ports:
      - '5000:5000'
    healthcheck:
      test: ['CMD-SHELL', './venv/bin/python scripts/healthcheck.py']
    image: libretranslate/libretranslate
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  libretranslate-proxy:
    container_name: libretranslate-proxy
    image: decentralize/caching-proxy
    environment:
      - UPSTREAM=http://192.168.1.160:5000
      - MAX_SIZE=10000m
      - PROXY_READ_TIMEOUT=900
      - PROXY_CACHE_VALID=168h
    ports:
      - 5075:80/tcp

networks:
  mongodb_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.213.0/24
          gateway: 192.168.213.1

volumes:
  redisdata:
  mongo-data:
