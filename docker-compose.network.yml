services:
  discord-tts-bot-redis:
    image: redis
    container_name: discord-tts-bot-redis
    restart: unless-stopped
    volumes:
      - discord-tts-bot-redis-data:/data
    ports:
      - 63799:6379
    networks:
      - discord-tts-bot-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 15s
      timeout: 10s
      retries: 12
      start_period: 30s
  discord-tts-bot-api:
    pull_policy: build
    build:
      context: ./api
      dockerfile: Dockerfile.api
      network: host
    container_name: discord-tts-bot-api
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    image: "blastbeng/discord-tts-bot-api:1.0.0"
    restart: unless-stopped
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "./audios:/app/audios"
      - "./backups:/app/backups"
      - "./config:/app/config-external"
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "/tmp/discord-tts-bot-discord:/tmp/discord-tts-bot-discord"
    entrypoint: ./entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5080/utils/healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 12
      start_period: 30s
    depends_on:
      discord-tts-bot-mongodb:
        condition: service_healthy
      discord-tts-bot-redis:
        condition: service_healthy
    networks:
      - discord-tts-bot-network
    ports:
      - 5080:5080
  discord-tts-bot-client:
    pull_policy: build
    build:
      context: ./client
      dockerfile: Dockerfile.client
      network: host
    container_name: discord-tts-bot-client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    depends_on:
      discord-tts-bot-api:
        condition: service_healthy
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "/tmp/discord-tts-bot-discord:/tmp/discord-tts-bot-discord"
    image: "blastbeng/discord-tts-bot-client:1.0.0"
    restart: unless-stopped
    networks:
      - discord-tts-bot-network
  discord-tts-bot-telegram:
    pull_policy: build
    build:
      context: ./telegram
      dockerfile: Dockerfile.telegram
      network: host
    container_name: discord-tts-bot-telegram
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    depends_on:
      discord-tts-bot-api:
        condition: service_healthy
    volumes:
      - ".env:/app/.env"
      - "./config:/app/config"
      - "/tmp/discord-tts-bot-api:/tmp/discord-tts-bot-api"
      - "/tmp/discord-tts-bot-discord:/tmp/discord-tts-bot-discord"
    image: "blastbeng/discord-tts-bot-telegram:1.0.0"
    restart: unless-stopped
    networks:
      - discord-tts-bot-network
  discord-tts-bot-mongodb:
    #image: mongo:8.0.3
    image: l33tlamer/mongodb-without-avx:latest
    container_name: discord-tts-bot-mongodb
    environment:
      - TZ=Europe/Rome
      - PUID=1000
      - PGID=1000
      - MONGODB_PORT=27017
    volumes:
      - discord-tts-bot-mongodb-data:/data/db
      - /usr/bin/curl:/usr/bin/curl
    ports:
      - 27017:27017
    networks:
      - discord-tts-bot-network
    entrypoint: "mongod --bind_ip_all --quiet --logpath /dev/null"
    healthcheck:
      test: mongo --norc --quiet --host=localhost --eval "db.runCommand('ping')" || exit
      interval: 15s
      timeout: 10s
      retries: 12
      start_period: 30s
    restart: unless-stopped

volumes:
  discord-tts-bot-mongodb-data:
  discord-tts-bot-redis-data:

networks:
  discord-tts-bot-network:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 2001:db8::/64
